{% extends "base.tmpl.html" %}

{% block title %} Overview {% endblock %}

{% block head %}
  <script>
   var table;
   function reformatData(obj){
       obj.data = obj.data.map(e => {
           return {
	       alexa_rank: e.alexa_rank,
               name: e.name,
               view: `/company/${e.id}`,
               edit: `/company/${e.id}/edit`,
               status: e.last_error ? "broken" : e.last_scan ? "scanner working" : "never scanned",
               last_scan:  e.last_scan ? (new Date(e.last_scan * 1000)).toISOString() : undefined,
               first_scan:  e.first_scan ? (new Date(e.first_scan * 1000)).toISOString() : undefined,
               errors: e.last_error ? (new Date(e.last_error * 1000)).toISOString() : undefined,
	       changes_recorded: e.changes_recorded,
               url: e.url,
           }
       })
       return obj
   }
   function loadData(){
       var r = new Request("/company_list");
       fetch(r)
	   .then(response => response.json())
	   .then(data => {
               table.setData(data.map(e => {
		   return {
		       name: e.name,
		       view: `/company/${e.id}`,
		       edit: `/company/${e.id}/edit`,
		       status: e.last_error ? "broken" : e.last_scan ? "scanner working" : "never scanned",
		       last_scan:  e.last_scan ? (new Date(e.last_scan * 1000)).toISOString() : undefined,
		       errors: e.last_error ? (new Date(e.last_error * 1000)).toISOString() : undefined,
		       url: e.url,
		   }
               }
               ))
	   });
   }
   function debounce(func, wait, immediate) {
       var timeout;
       return function() {
	   var context = this, args = arguments;
	   var later = function() {
               timeout = null;
               if (!immediate) func.apply(context, args);
	   };
	   var callNow = immediate && !timeout;
	   clearTimeout(timeout);
	   timeout = setTimeout(later, wait);
	   if (callNow) func.apply(context, args);
       };
   };

   update_filter = debounce(function(){
       var el = document.getElementById("searchbox");
       table.setFilter("name", "like", el.value);
       console.log(el);
   }, 200, false);

   window.onload = function(){
       table = new Tabulator("#company-table", {
	   layout:"fitColumns",
	   height: "80vh",
	   tooltips:false,
	   addRowPos:"top",
	   movableColumns:false,
	   resizableRows:false,
	   //pagination:"remote",
	   paginationSize:200,
	   layoutColumnsOnNewData:true,
	   initialSort:[
               {column:"alexa_rank", dir:"asc"},
	   ],
	   columns: [
               {field:"alexa_rank", title:"Rank", widthGrow: 1},
               {field:"name", title:"Name", headerFilter: "input", widthGrow: 5},
               {field:"last_scan", title:"Last Scan",widthGrow: 2},
               {field:"first_scan", title:"Earliest Scan", widthGrow: 2},
	       {field:"changes_recorded", title:"changes", widthGrow: 1},
               {field:"view", title:"", formatter:"link", formatterParams:{label: "view"}, widthGrow: 1},
               {field:"edit", title:"", formatter:"link", formatterParams:{label: "edit"}, widthGrow: 1},
               {field:"url", title:"", formatter:"link", formatterParams:{label: "Privacy Policy Link"}, widthGrow: 1},
	   ],
	   ajaxSorting:true,
	   ajaxFiltering:true,
	   ajaxProgressiveLoad:"scroll",
	   ajaxURL:"/ajaxTableEndpoint",
	   ajaxResponse:function(url, params, response) {
	       return reformatData(response);
	   },
	   ajaxURLGenerator:function(url, config, params){
	       return url+"?params=" + encodeURI(JSON.stringify(params));
	   }
       });
       //loadData();
   };

  </script>
{% endblock %}

{% block content %}
<div><a href="/company/new">add new company</a></div>
<div id="company-table"></div>
{% endblock %}
